{"version":3,"sources":["app.ts","environment.ts","home.ts","main.ts","elements/sidebar-menu.ts","resources/index.ts","C:/git/NetAdmin.Web/src/app.html","C:/git/NetAdmin.Web/src/styles/default.css","C:/git/NetAdmin.Web/src/home.html","C:/git/NetAdmin.Web/src/elements/sidebar-menu.html"],"names":[],"mappings":";;IAEA;QAAA;QAYA,CAAC;QATC,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;YAC1B,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,EAAE,EAAe,QAAQ,EAAE,MAAM,EAAI,KAAK,EAAE,MAAM,EAAC;gBAC5D,EAAE,KAAK,EAAE,cAAc,EAAG,QAAQ,EAAE,gBAAgB,EAAE,IAAI,EAAC,UAAU,EAAE;aACxE,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QACH,UAAC;IAAD,CAZA,AAYC,IAAA;IAZY,WAAG,MAYf,CAAA;;;;;ICdD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICHF;QAAA;YACI,YAAO,GAAG,cAAc,CAAC;QAC7B,CAAC;QAAD,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,YAAI,OAEhB,CAAA;;;;;ICEK,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICnBD;QAAA;YACI,cAAS,GAAG;gBACZ,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;gBACtD,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;gBACtD,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;gBACtD,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;gBACtD,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;aACvD,CAAC;QACJ,CAAC;QAAD,+BAAC;IAAD,CARA,AAQC,IAAA;IARY,gCAAwB,2BAQpC,CAAA;;;;;ICZD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\r\n\r\nexport class App {\r\n  router: Router;\r\n  \r\n  configureRouter(config: RouterConfiguration, router: Router){\r\n    config.title = 'NetAdmin';\r\n    config.map([\r\n      { route: '',              moduleId: 'home',   title: 'Home'},\r\n      { route: 'contacts/:id',  moduleId: 'contact-detail', name:'contacts' }\r\n    ]);\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","export class Home {\r\n    message = \"Home message\";\r\n}","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n(<any>Promise).config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","\r\ninterface DatabaseModel {\r\n  name: string;\r\n  tables: Array<string>;\r\n}\r\n\r\nexport class SidebarMenuCustomElement {\r\n    databases = [\r\n    { name: \"Database 1\", tables: [\"Table 1\", \"Table 2\"] },\r\n    { name: \"Database 2\", tables: [\"Table 1\", \"Table 2\"] },\r\n    { name: \"Database 3\", tables: [\"Table 1\", \"Table 2\"] },\r\n    { name: \"Database 4\", tables: [\"Table 1\", \"Table 2\"] },\r\n    { name: \"Database 5\", tables: [\"Table 1\", \"Table 2\"] }\r\n  ];\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null],"sourceRoot":"../src"}