{"version":3,"sources":["app.ts","environment.ts","home.ts","main.ts","resources/index.ts","C:/GIT/MY/NetAdmin.Web/src/styles/default.css","C:/GIT/MY/NetAdmin.Web/src/app.html","C:/GIT/MY/NetAdmin.Web/src/home.html"],"names":[],"mappings":";;IAOA;QAAA;YAGE,cAAS,GAAG;gBACV,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;gBACjC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;gBACjC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;gBACjC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;gBACjC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;aAClC,CAAC;QAWJ,CAAC;QATC,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;YAC1B,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,EAAE,EAAe,QAAQ,EAAE,MAAM,EAAI,KAAK,EAAE,MAAM,EAAC;gBAC5D,EAAE,KAAK,EAAE,cAAc,EAAG,QAAQ,EAAE,gBAAgB,EAAE,IAAI,EAAC,UAAU,EAAE;aACxE,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QACH,UAAC;IAAD,CApBA,AAoBC,IAAA;IApBY,WAAG,MAoBf,CAAA;;;;;IC3BD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICHF;QAAA;YACI,YAAO,GAAG,cAAc,CAAC;QAC7B,CAAC;QAAD,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,YAAI,OAEhB,CAAA;;;;;ICEK,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\n\ninterface DatabaseModel {\n  name: string;\n  tables: Array<string>;\n}\n\nexport class App {\n  router: Router;\n\n  databases = [\n    { name: \"1\", tables: [\"1\", \"2\"] },\n    { name: \"2\", tables: [\"1\", \"2\"] },\n    { name: \"3\", tables: [\"1\", \"2\"] },\n    { name: \"4\", tables: [\"1\", \"2\"] },\n    { name: \"5\", tables: [\"1\", \"2\"] }\n  ];\n  \n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = 'NetAdmin';\n    config.map([\n      { route: '',              moduleId: 'home',   title: 'Home'},\n      { route: 'contacts/:id',  moduleId: 'contact-detail', name:'contacts' }\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Home {\r\n    message = \"Home message\";\r\n}","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null],"sourceRoot":"../src"}